name: build docker images, publish to github packages and deploy in remote server

on:
  release:
    types:
      - published

env:
  REGISTRY: ghcr.io
  RELEASE_TAG: ${{ github.ref_name }}
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-web-frontend

jobs:
  backend-build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  backend-deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: backend-build-and-push-image
    steps:
      - name: Run docker container in remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.RELEASE_TAG }}
            docker stop ${{ vars.BACKEND_CONTAINER_NAME }} || true
            docker rm ${{ vars.BACKEND_CONTAINER_NAME }} || true
            docker run -d --restart=always \
            --name ${{ vars.BACKEND_CONTAINER_NAME }} \
            -p ${{ vars.BACKEND_HTTP_SERVER_PORT }}:80 \
            -e TZ=${{ vars.TIMEZONE }} \
            -e DATABASE_USER=${{ secrets.DATABASE_USER }} \
            -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
            -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
            -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
            -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e LOG_LEVEL=${{ vars.LOG_LEVEL }} \
            -e SERVICE_NAME=${{ vars.BACKEND_CONTAINER_NAME }} \
            -e SERVICE_VERSION=${{ env.RELEASE_TAG }} \
            -e TRACER_ENDPOINT=${{ vars.TRACER_ENDPOINT }} \
            -e TRACER_ENABLED=${{ vars.TRACER_ENABLED }} \
            -e KONG_URL=${{ vars.KONG_URL }} \
            -e KONG_CONSUMER=${{ vars.KONG_CONSUMER }} \
            -e KONG_JWT_KEY=${{ vars.KONG_JWT_KEY }} \
            --network=${{ vars.DOCKER_NETWORK }} \
             ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.RELEASE_TAG }} \
             http

  frontend-build-and-push-image:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "VUE_APP_API_URL=${{ vars.BACKEND_URL }}"
            "VUE_APP_OTEL_URL=${{ vars.FRONTEND_TRACER_URL }}"
            "VUE_APP_SERVICE_NAME=${{ vars.FRONTEND_CONTAINER_NAME }}"
            "VUE_APP_SERVICE_VERSION=${{ env.RELEASE_TAG }}"

  frontend-deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: frontend-build-and-push-image
    steps:
      - name: Run docker container in remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.RELEASE_TAG }}
            docker stop ${{ vars.FRONTEND_CONTAINER_NAME }} || true
            docker rm ${{ vars.FRONTEND_CONTAINER_NAME }} || true
            docker run -d \
            --name ${{ vars.FRONTEND_CONTAINER_NAME }} \
            -e TZ=${{ vars.TIMEZONE }} \
            -p ${{ vars.FRONTEND_HTTP_SERVER_PORT }}:80 \
            --network=${{ vars.DOCKER_NETWORK }} \
             ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.RELEASE_TAG }}
