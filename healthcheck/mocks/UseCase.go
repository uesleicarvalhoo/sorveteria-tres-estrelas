// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	healthcheck "github.com/uesleicarvalhoo/sorveteria-tres-estrelas/healthcheck"
)

// UseCase is an autogenerated mock type for the UseCase type
type UseCase struct {
	mock.Mock
}

// HealthCheck provides a mock function with given fields: ctx
func (_m *UseCase) HealthCheck(ctx context.Context) healthcheck.HealthStatus {
	ret := _m.Called(ctx)

	var r0 healthcheck.HealthStatus
	if rf, ok := ret.Get(0).(func(context.Context) healthcheck.HealthStatus); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(healthcheck.HealthStatus)
	}

	return r0
}

type mockConstructorTestingTNewUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewUseCase creates a new instance of UseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUseCase(t mockConstructorTestingTNewUseCase) *UseCase {
	mock := &UseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
